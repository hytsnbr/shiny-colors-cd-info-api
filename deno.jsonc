{
  "imports": {
    "@/": "./src/",
    "@oak/oak": "jsr:@oak/oak@^16.0.0",
    "@std/assert": "jsr:@std/assert@^0.226.0",
    "@std/dotenv": "jsr:@std/dotenv@^0.224.0",
    "@std/log": "jsr:@std/log@^0.224.1",
    "download": "https://deno.land/x/download@v2.0.2/mod.ts"
  },
  "lint": {
    "include": [
      "src/"
    ],
    "exclude": [],
    "rules": {
      "tags": [
        "recommended"
      ],
      "include": [
        "camelcase",
        "eqeqeq",
        "explicit-function-return-type",
        "explicit-module-boundary-types",
        "no-await-in-loop"
      ],
      "exclude": []
    }
  },
  "lint-staged": {
    "*": "deno lint && deno fmt & deno test"
  },
  "fmt": {
    "useTabs": false,
    "lineWidth": 80,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": false,
    "proseWrap": "preserve",
    "include": [
      "src/",
      "deno.jsonc"
    ],
    "exclude": []
  },
  "hooks_dir": ".hooks",
  "tasks": {
    "init": "deno task git-config && deno task setup-hooks && deno task build",
    "start": "deno run --allow-net --allow-read --watch src/server.ts",
    "build": "deno fmt && deno task cached && deno test",
    "cached": "deno cache **/*/*.ts --lock-write",
    "ci": "deno lint && deno fmt --check && deno test",
    // git hooks
    "setup-hooks": "deno run --allow-read --allow-run https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/setup-hooks.ts",
    "pre-commit": "deno run --allow-read --allow-env --allow-run --allow-write https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/lint-staged.ts",
    "pre-push": "deno task ci",
    // git config
    "git-config": "deno task auto-crlf",
    "auto-crlf": "git config --global core.autocrlf false"
  }
}
